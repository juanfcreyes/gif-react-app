{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","target","GifGridItem","id","title","url","key","src","alt","width","getGifs","category","a","encodeURI","fetch","repsonse","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKYO,UAAU,kBACpC,2BAAOC,KAAK,OAAOC,MAAOV,EAC1BW,SAfiB,SAACR,GACtBF,EAAcE,EAAES,OAAOF,YCGhBG,MATf,YAAwC,IAAlBC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,MAAOC,EAAM,EAANA,IAC7B,OACI,yBAAKC,IAAKH,EAAIN,UAAU,8CACpB,yBAAKU,IAAKF,EAAKG,IAAKJ,EAAOK,MAAM,SACjC,uBAAGZ,UAAU,WAAWO,K,uBCNvBM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbP,EADa,iDACmCQ,UAAUF,GAD7C,+DAEIG,MAAMT,GAFV,cAEbU,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,cAAK,CACtBjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BjB,QAPxB,kBAUZa,GAVY,4CAAH,sDC6BLK,MAxBf,YAA8B,IAAZZ,EAAW,EAAXA,SAAW,ECDD,SAACA,GAAc,IAAD,EACZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OARAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAACV,GACpBQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAGjB,CAAEb,IACCc,EDXsBI,CAAalB,GAAnCa,EADkB,EAClBA,QAAcN,EADI,EACTD,KAChB,OACI,oCACI,wBAAIX,IAAKK,GAAT,IAAqBA,EAArB,KACEa,GAAW,cACb,yBAAK3B,UAAU,+CAEPqB,EAAKC,KAAI,SAACW,GACN,OACI,kBAAC,EAAD,eAAaxB,IAAKwB,EAAI3B,IACjB2B,UEKlBC,EAjBM,WAAO,IAAD,EACc3C,mBAAS,CAAC,YAAa,YAAa,gBADlD,mBAChBQ,EADgB,KACJT,EADI,KAEvB,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEES,EAAWuB,KAAI,SAACR,GACZ,OAAO,kBAAC,EAAD,CAASL,IAAKK,EAAUA,SAAUA,SCPzDqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.91c09154.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const hadleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"input_category\" > \r\n            <input type=\"text\" value={inputValue} \r\n            onChange={hadleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func \r\n};\r\n\r\nexport default AddCategory;\r\n\r\n","import React from 'react'\r\n\r\nfunction GifGridItem({id, title, url}) {\r\n    return (\r\n        <div key={id} className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title} width=\"100%\"></img>\r\n            <p className=\"caption\">{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Q3thaqNsxi5Q9RYJwzX6S2l3aKXP3LIc`;\r\n    const repsonse = await fetch(url);\r\n    const { data } = await repsonse.json();\r\n    const gifs = data.map(img => ({ \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium?.url\r\n        })\r\n    );\r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nfunction GifGrid({category}) {\r\n    const {loading, data:gifs} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h2 key={category}> {category} </h2> \r\n            { loading && 'Cargando...' }\r\n            <div className=\"animate__animated animate__fadeIn card-grid\">\r\n                { \r\n                    gifs.map((gif) =>  {\r\n                        return (\r\n                            <GifGridItem key={gif.id} \r\n                            {... gif}></GifGridItem>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </>        \r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","\r\nimport  { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => { \r\n        getGifs(category).then((gifs) => {\r\n            setstate({\r\n                data: gifs,\r\n                loading: false\r\n            });\r\n        });\r\n     }, [ category ]);\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory  from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] =  useState(['One Punch', 'Samurai X', 'Dragon Ball']); \r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1> \r\n          <AddCategory setCategories={setCategories}></AddCategory>\r\n          <hr/>\r\n          { \r\n            categories.map((category) => {\r\n                return <GifGrid key={category} category={category}></GifGrid>\r\n            })\r\n          }\r\n  \r\n        </>\r\n    );\r\n}; \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css'\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render( \n  <GifExpertApp/> ,\n  document.getElementById('root')\n);"],"sourceRoot":""}